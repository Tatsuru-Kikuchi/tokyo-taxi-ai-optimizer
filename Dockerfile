# Tokyo Taxi AI Optimizer - Production Deployment\n\n# Build stage\nFROM node:18-alpine AS frontend-build\nWORKDIR /app/frontend\nCOPY frontend/package*.json ./\nRUN npm ci --only=production\nCOPY frontend/ ./\nRUN npm run build\n\n# Python backend stage\nFROM python:3.9-slim AS backend\n\n# Set environment variables\nENV PYTHONDONTWRITEBYTECODE=1\nENV PYTHONUNBUFFERED=1\nENV ENVIRONMENT=production\n\n# Install system dependencies\nRUN apt-get update && apt-get install -y \\\n    gcc \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Create app directory\nWORKDIR /app\n\n# Install Python dependencies\nCOPY backend/requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Copy backend code\nCOPY backend/ ./backend/\n\n# Copy built frontend\nCOPY --from=frontend-build /app/frontend/build ./frontend/build\n\n# Create non-root user\nRUN useradd --create-home --shell /bin/bash taxi\nRUN chown -R taxi:taxi /app\nUSER taxi\n\n# Expose port\nEXPOSE 8000\n\n# Health check\nHEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \\\n    CMD curl -f http://localhost:8000/health || exit 1\n\n# Start command\nCMD [\"uvicorn\", \"backend.main:app\", \"--host\", \"0.0.0.0\", \"--port\", \"8000\", \"--workers\", \"4\"]\n"